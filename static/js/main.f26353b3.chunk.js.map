{"version":3,"sources":["Sidebar.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","notes","onAddNote","onDeleteNote","activeNote","setActiveNote","sortedNotes","sort","a","b","lastModified","className","onClick","map","note","id","title","body","substr","Date","toLocaleDateString","hour","minute","Main","onUpdateNote","onEditField","key","value","now","type","onChange","e","target","autoFocus","placeholder","App","useState","setNotes","newNote","uuid","idToDelete","filter","find","updatedNote","updatedNotesArray","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f26353b3.chunk.js","sourcesContent":["function Sidebar({notes,\r\n    onAddNote,\r\n    onDeleteNote,\r\n    activeNote,\r\n    setActiveNote,}){\r\n\r\n    const sortedNotes=notes.sort((a,b)=> b.lastModified-a.lastModified )\r\n\r\n    return (<div className=\"app-sidebar\">\r\n    <div className=\"app-sidebar-header\">\r\n    <h1>DPhi-Notes</h1>\r\n    <button onClick={onAddNote}>Add</button>\r\n    </div>\r\n    <div className=\"app-sidebar-notes\">\r\n    {sortedNotes.map((note)=>(\r\n\r\n <div className={`app-sidebar-note ${note.id===activeNote && \"active\"}`}  onClick={()=>setActiveNote(note.id)}>\r\n      <div className=\"sidebar-note-title\">\r\n         <strong>{note.title}</strong>\r\n             <button onClick={()=>onDeleteNote(note.id,)}>Delete</button>\r\n        </div>\r\n         <p>{note.body && note.body.substr(0,100)+\".....\"}</p>\r\n        <small className=\"note-meta\">Last modified {new Date(note.lastModified).toLocaleDateString(\"en-GB\",{\r\n    hour:\"2-digit\",\r\n    minute:\"2-digit\",\r\n       })}\r\n        </small>\r\n\r\n  </div>\r\n    ))}\r\n  \r\n </div>\r\n    </div>)\r\n\r\n}\r\nexport default Sidebar;","import ReactMarkdown from 'react-markdown';\r\n\r\nfunction Main({activeNote,onUpdateNote}){\r\n\r\nconst onEditField=(key,value)=>{\r\n    onUpdateNote({\r\n\r\n      ...activeNote,\r\n        // id:activeNote.id,\r\n        [key]:value,\r\n        lastModified:Date.now(),\r\n\r\n    })\r\n};\r\n\r\nif(!activeNote) return <div className=\"no-active-note\">No note selected</div>\r\n\r\nreturn <div className=\"app-main\">\r\n\r\n      <div className=\"app-main-note-edit\">\r\n\r\n    <input type=\"text\" id=\"title\" value={activeNote.title} onChange={(e)=>onEditField(\"title\",e.target.value)} autoFocus/>\r\n\r\n    <textarea id=\"body\" placeholder=\"write your note here...\" value={activeNote.body} onChange={(e)=>onEditField(\"body\",e.target.value)}/>\r\n\r\n     </div>  \r\n     <div className=\"app-main-note-preview\">\r\n    <h1 className=\"preview-title\">{activeNote.title}</h1>\r\n     <ReactMarkdown className=\"markdown-preview\">{activeNote.body}</ReactMarkdown>\r\n      </div>\r\n</div>\r\n}\r\nexport default Main;","//import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\nimport uuid from 'react-uuid';\nimport Sidebar from './Sidebar';\nimport Main from './Main';\n\n\nfunction App() {\n  const [notes,setNotes]=useState([]);\n\n  const [activeNote,setActiveNote]=useState(false);\n\n const onAddNote=()=>{\n  const newNote={\n\n    id: uuid(),\n\n    title: \"untitled Note\",\n\n    body: \"\",\n\n    lastModified:Date.now(),\n\n  };\n\n  setNotes([newNote,...notes]);\n\n };\n\n\n const onUpdateNote=(updatedNote)=>{\n    const updatedNotesArray=notes.map((note)=>{\n      if(note.id === activeNote){\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotes(updatedNotesArray);\n }\n\n\n const onDeleteNote=(idToDelete)=>{\n   setNotes(notes.filter((note)=>note.id!==idToDelete));\n };\n\n\n const getActiveNote=()=>{\n   return notes.find((note)=>note.id === activeNote);\n };\n\n\n\n  return (\n    <div className=\"App\">\n   \n     <Sidebar notes={notes} onAddNote={onAddNote} onDeleteNote={onDeleteNote} activeNote={activeNote} setActiveNote={setActiveNote}/>\n     <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote}/>\n     </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}