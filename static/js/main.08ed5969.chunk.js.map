{"version":3,"sources":["Sidebar.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","notes","onAddNote","onDeleteNote","activeNote","setActiveNote","className","onClick","map","note","id","title","body","substr","Date","lastModified","toLocaleDateString","hour","minute","Main","type","autoFocus","placeholder","App","useState","setNotes","newNote","uuid","now","idToDelete","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAiCeA,MAjCf,YAIqB,IAJHC,EAIE,EAJFA,MACdC,EAGgB,EAHhBA,UACAC,EAEgB,EAFhBA,aACAC,EACgB,EADhBA,WACAC,EAAgB,EAAhBA,cAEA,OAAO,sBAAKC,UAAU,cAAf,UACP,sBAAKA,UAAU,qBAAf,UACA,4CACA,wBAAQC,QAASL,EAAjB,oBAEA,qBAAKI,UAAU,oBAAf,SACCL,EAAMO,KAAI,SAACC,GAAD,OAEd,sBAAKH,UAAS,2BAAsBG,EAAKC,KAAKN,GAAc,UAAaG,QAAS,kBAAIF,EAAcI,EAAKC,KAAzG,UACK,sBAAKJ,UAAU,qBAAf,UACG,iCAASG,EAAKE,QACV,wBAAQJ,QAAS,kBAAIJ,EAAaM,EAAKC,KAAvC,uBAEJ,4BAAID,EAAKG,MAAQH,EAAKG,KAAKC,OAAO,EAAE,KAAK,UAC1C,wBAAOP,UAAU,YAAjB,2BAA4C,IAAIQ,KAAKL,EAAKM,cAAcC,mBAAmB,QAAQ,CACvGC,KAAK,UACLC,OAAO,2BCNIC,MAhBf,WACA,OAAO,sBAAKb,UAAU,WAAf,UAED,sBAAKA,UAAU,qBAAf,UAEF,uBAAOc,KAAK,OAAOV,GAAG,QAAQW,WAAS,IAEvC,0BAAUX,GAAG,OAAOY,YAAY,+BAG/B,sBAAKhB,UAAU,wBAAf,UACA,oBAAIA,UAAU,gBAAd,mBACC,qBAAKA,UAAU,mBAAf,iCCkCSiB,MAtCf,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACNvB,EADM,KACAwB,EADA,OAGoBD,oBAAS,GAH7B,mBAGNpB,EAHM,KAGKC,EAHL,KA6Bb,OACE,sBAAKC,UAAU,MAAf,UAEC,cAAC,EAAD,CAASL,MAAOA,EAAOC,UA3BX,WACf,IAAMwB,EAAQ,CAEZhB,GAAIiB,MAEJhB,MAAO,gBAEPC,KAAM,GAENG,aAAaD,KAAKc,OAIpBH,EAAS,CAACC,GAAF,mBAAazB,MAc2BE,aAT9B,SAAC0B,GAClBJ,EAASxB,EAAM6B,QAAO,SAACrB,GAAD,OAAQA,EAAKC,KAAKmB,OAQmCzB,WAAYA,EAAYC,cAAeA,IAChH,cAAC,EAAD,QC7BU0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.08ed5969.chunk.js","sourcesContent":["function Sidebar({notes,\r\n    onAddNote,\r\n    onDeleteNote,\r\n    activeNote,\r\n    setActiveNote,}){\r\n\r\n    return <div className=\"app-sidebar\">\r\n    <div className=\"app-sidebar-header\">\r\n    <h1>DPhi-Notes</h1>\r\n    <button onClick={onAddNote}>Add</button>\r\n    </div>\r\n    <div className=\"app-sidebar-notes\">\r\n    {notes.map((note)=>(\r\n\r\n <div className={`app-sidebar-note ${note.id===activeNote && \"active\"}`}  onClick={()=>setActiveNote(note.id)}>\r\n      <div className=\"sidebar-note-title\">\r\n         <strong>{note.title}</strong>\r\n             <button onClick={()=>onDeleteNote(note.id,)}>Delete</button>\r\n        </div>\r\n         <p>{note.body && note.body.substr(0,100)+\".....\"}</p>\r\n        <small className=\"note-meta\">Last modified {new Date(note.lastModified).toLocaleDateString(\"en-GB\",{\r\n    hour:\"2-digit\",\r\n    minute:\"2-digit\",\r\n       })}\r\n        </small>\r\n\r\n  </div>\r\n    ))}\r\n  \r\n </div>\r\n    </div>\r\n\r\n}\r\nexport default Sidebar;","function Main(){\r\nreturn <div className=\"app-main\">\r\n\r\n      <div className=\"app-main-note-edit\">\r\n\r\n    <input type=\"text\" id=\"title\" autoFocus/>\r\n\r\n    <textarea id=\"body\" placeholder=\"write your note here...\"/>\r\n\r\n     </div>  \r\n     <div className=\"app-main-note-preview\">\r\n     <h1 className=\"preview-title\">Title</h1>\r\n      <div className=\"markdown-preview\">note preview</div>\r\n      </div>\r\n</div>\r\n}\r\nexport default Main;","//import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\nimport uuid from 'react-uuid';\nimport Sidebar from './Sidebar';\nimport Main from './Main';\n\n\nfunction App() {\n  const [notes,setNotes]=useState([]);\n\n  const [activeNote,setActiveNote]=useState(false);\n\n const onAddNote=()=>{\n  const newNote={\n\n    id: uuid(),\n\n    title: \"untitled Note\",\n\n    body: \"\",\n\n    lastModified:Date.now(),\n\n  };\n\n  setNotes([newNote,...notes]);\n\n };\n\n\n const onDeleteNote=(idToDelete)=>{\n   setNotes(notes.filter((note)=>note.id!==idToDelete));\n }\n\n\n\n  return (\n    <div className=\"App\">\n   \n     <Sidebar notes={notes} onAddNote={onAddNote} onDeleteNote={onDeleteNote} activeNote={activeNote} setActiveNote={setActiveNote}/>\n     <Main/>\n     </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}